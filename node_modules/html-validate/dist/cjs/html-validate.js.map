{"version":3,"file":"html-validate.js","sources":["../../src/cli/html-validate.ts"],"sourcesContent":["var _a;\n/* eslint-disable no-console, no-process-exit, sonarjs/no-duplicate-string -- as expected from a cli app */\nimport fs from \"fs\";\nimport path from \"node:path\";\nimport kleur from \"kleur\";\nimport minimist from \"minimist\";\nimport { SchemaValidationError, UserError } from \"..\";\nimport { name, version, bugs as pkgBugs } from \"../generated/package\";\nimport { CLI } from \"./cli\";\nimport { Mode, modeToFlag } from \"./mode\";\nimport { lint } from \"./actions/lint\";\nimport { init } from \"./actions/init\";\nimport { printConfig } from \"./actions/print-config\";\nimport { dump } from \"./actions/dump\";\nfunction getMode(argv) {\n    if (argv.init) {\n        return Mode.INIT;\n    }\n    if (argv[\"dump-events\"]) {\n        return Mode.DUMP_EVENTS;\n    }\n    if (argv[\"dump-source\"]) {\n        return Mode.DUMP_SOURCE;\n    }\n    if (argv[\"dump-tokens\"]) {\n        return Mode.DUMP_TOKENS;\n    }\n    if (argv[\"dump-tree\"]) {\n        return Mode.DUMP_TREE;\n    }\n    if (argv[\"print-config\"]) {\n        return Mode.PRINT_CONFIG;\n    }\n    return Mode.LINT;\n}\nfunction requiresFilename(mode) {\n    switch (mode) {\n        case Mode.LINT:\n            return true;\n        case Mode.INIT:\n            return false;\n        case Mode.DUMP_EVENTS:\n        case Mode.DUMP_TOKENS:\n        case Mode.DUMP_TREE:\n        case Mode.DUMP_SOURCE:\n        case Mode.PRINT_CONFIG:\n            return true;\n    }\n}\nfunction handleValidationError(err) {\n    if (err.filename) {\n        const filename = path.relative(process.cwd(), err.filename);\n        console.log(kleur.red(`A configuration error was found in \"${filename}\":`));\n    }\n    else {\n        console.log(kleur.red(`A configuration error was found:`));\n    }\n    console.group();\n    {\n        console.log(err.prettyError());\n    }\n    console.groupEnd();\n}\nfunction handleUserError(err) {\n    var _a;\n    const formatted = err.prettyFormat();\n    if (formatted) {\n        console.error(); /* blank line */\n        console.error(formatted);\n        return;\n    }\n    console.error(kleur.red(\"Caught exception:\"));\n    console.group();\n    {\n        console.error((_a = err.prettyFormat()) !== null && _a !== void 0 ? _a : err);\n    }\n    console.groupEnd();\n}\nfunction handleUnknownError(err) {\n    console.error(kleur.red(\"Caught exception:\"));\n    console.group();\n    {\n        console.error(err);\n    }\n    console.groupEnd();\n    const bugUrl = `${pkgBugs}?issuable_template=Bug`;\n    console.error(kleur.red(`This is a bug in ${name}-${version}.`));\n    console.error(kleur.red([\n        `Please file a bug at ${bugUrl}`,\n        `and include this message in full and if possible the content of the`,\n        `file being parsed (or a reduced testcase).`,\n    ].join(\"\\n\")));\n}\nconst argv = minimist(process.argv.slice(2), {\n    string: [\"c\", \"config\", \"ext\", \"f\", \"formatter\", \"max-warnings\", \"rule\", \"stdin-filename\"],\n    boolean: [\n        \"init\",\n        \"dump-events\",\n        \"dump-source\",\n        \"dump-tokens\",\n        \"dump-tree\",\n        \"h\",\n        \"help\",\n        \"print-config\",\n        \"stdin\",\n        \"version\",\n    ],\n    alias: {\n        c: \"config\",\n        f: \"formatter\",\n        h: \"help\",\n    },\n    default: {\n        ext: \"html\",\n        formatter: \"stylish\",\n    },\n    unknown: (opt) => {\n        if (opt.startsWith(\"-\")) {\n            process.stderr.write(`unknown option ${opt}\\n`);\n            process.exit(1);\n        }\n        return true;\n    },\n});\nfunction showUsage() {\n    process.stdout.write(`${name}-${version}\nUsage: html-validate [OPTIONS] [FILENAME..] [DIR..]\n\nCommon options:\n      --ext=STRING               specify file extensions (commaseparated).\n  -f, --formatter=FORMATTER      specify the formatter to use.\n      --max-warnings=INT         number of warnings to trigger nonzero exit code\n      --rule=RULE:SEVERITY       set additional rule, use comma separator for\n                                 multiple.\n      --stdin                    process markup from stdin.\n      --stdin-filename=STRING    specify filename to report when using stdin\n\nMiscellaneous:\n  -c, --config=STRING            use custom configuration file.\n      --init                     initialize project with a new configuration\n      --print-config             output configuration for given file.\n  -h, --help                     show help.\n      --version                  show version.\n\nDebugging options:\n      --dump-events              output events during parsing.\n      --dump-source              output post-transformed source data.\n      --dump-tokens              output tokens from lexing stage.\n      --dump-tree                output nodes from the dom tree.\n\nFormatters:\n\nMultiple formatters can be specified with a comma-separated list,\ne.g. \"json,checkstyle\" to enable both.\n\nTo capture output to a file use \"formatter=/path/to/file\",\ne.g. \"checkstyle=dist/html-validate.xml\"\n`);\n}\nfunction showVersion() {\n    process.stdout.write(`${name}-${version}\\n`);\n}\nif (argv.stdin) {\n    argv._.push(\"-\");\n}\nif (argv.version) {\n    showVersion();\n    process.exit();\n}\nif (argv.help) {\n    showUsage();\n    process.exit();\n}\nif (argv._.length === 0) {\n    const mode = getMode(argv);\n    if (mode === Mode.LINT) {\n        showUsage();\n        process.exit(0);\n    }\n    else if (requiresFilename(mode)) {\n        const flag = modeToFlag(mode);\n        console.error(`\\`${flag}\\` requires a filename.`);\n        process.exit(1);\n    }\n}\n/* check that supplied config file exists before creating CLI */\nif (typeof argv.config !== \"undefined\") {\n    const checkPath = path.resolve(argv.config);\n    if (!fs.existsSync(checkPath)) {\n        console.log(`The file \"${String(argv.config)}\" was not found.`);\n        console.log(`The location this file was checked for at was: \"${String(checkPath)}\"`);\n        process.exit(1);\n    }\n}\nconst cli = new CLI({\n    configFile: argv.config,\n    rules: argv.rule,\n});\nconst mode = getMode(argv);\nconst formatter = cli.getFormatter(argv.formatter);\nconst maxWarnings = parseInt((_a = argv[\"max-warnings\"]) !== null && _a !== void 0 ? _a : \"-1\", 10);\nconst htmlvalidate = cli.getValidator();\n/* sanity check: ensure maxWarnings has a valid value */\nif (isNaN(maxWarnings)) {\n    console.log(`Invalid value \"${String(argv[\"max-warnings\"])}\" given to --max-warnings`);\n    process.exit(1);\n}\n/* parse extensions (used when expanding directories) */\nconst extensions = argv.ext.split(\",\").map((cur) => {\n    return cur.startsWith(\".\") ? cur.slice(1) : cur;\n});\nconst files = cli.expandFiles(argv._, { extensions });\nif (files.length === 0 && mode !== Mode.INIT) {\n    console.error(\"No files matching patterns\", argv._);\n    process.exit(1);\n}\nasync function run() {\n    var _a;\n    try {\n        let success;\n        if (mode === Mode.LINT) {\n            success = await lint(htmlvalidate, process.stdout, files, {\n                formatter,\n                maxWarnings,\n                stdinFilename: (_a = argv[\"stdin-filename\"]) !== null && _a !== void 0 ? _a : false,\n            });\n        }\n        else if (mode === Mode.INIT) {\n            success = await init(cli, process.stdout, { cwd: process.cwd() });\n        }\n        else if (mode === Mode.PRINT_CONFIG) {\n            success = await printConfig(htmlvalidate, process.stdout, files);\n        }\n        else {\n            success = await dump(htmlvalidate, process.stdout, files, mode);\n        }\n        process.exit(success ? 0 : 1);\n    }\n    catch (err) {\n        if (err instanceof SchemaValidationError) {\n            handleValidationError(err);\n        }\n        else if (err instanceof UserError) {\n            handleUserError(err);\n        }\n        else {\n            handleUnknownError(err);\n        }\n        process.exit(1);\n    }\n}\nrun().catch((err) => {\n    console.error(err);\n    process.exit(1);\n});\n//# sourceMappingURL=html-validate.js.map"],"names":["Mode","path","kleur","pkgBugs","name","version","minimist","modeToFlag","fs","CLI","lint","init","printConfig","dump","SchemaValidationError","UserError"],"mappings":"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"}