{"version":3,"file":"core-nodejs.js","sources":["../../src/utils/require-uncached.ts","../../src/config/resolver/nodejs/determine-root-dir.ts","../../src/config/resolver/nodejs/expand-relative-path.ts","../../src/config/resolver/nodejs/nodejs-resolver.ts","../../src/config/loaders/file-system.ts","../../src/utils/compatibility-check.nodejs.ts"],"sourcesContent":["/**\n * Similar to `require(..)` but removes the cached copy first.\n */\nexport function requireUncached(require, moduleId) {\n    const filename = require.resolve(moduleId);\n    /* remove references from the parent module to prevent memory leak */\n    const m = require.cache[filename];\n    if (m === null || m === void 0 ? void 0 : m.parent) {\n        const { parent } = m;\n        for (let i = parent.children.length - 1; i >= 0; i--) {\n            if (parent.children[i].id === filename) {\n                parent.children.splice(i, 1);\n            }\n        }\n    }\n    /* remove old module from cache */\n    /* eslint-disable-next-line @typescript-eslint/no-dynamic-delete -- needed to perform its function */\n    delete require.cache[filename];\n    /* eslint-disable-next-line import/no-dynamic-require, security/detect-non-literal-require -- as expected but should be moved to upcoming resolver class */\n    return require(filename);\n}\n//# sourceMappingURL=require-uncached.js.map","import fs from \"node:fs\";\nimport path from \"node:path\";\nlet cachedRootDir = null;\n/**\n * @internal\n */\nexport function determineRootDirImpl(intial, fs) {\n    /* try to locate package.json */\n    let current = intial;\n    // eslint-disable-next-line no-constant-condition -- break outs when filesystem is traversed\n    while (true) {\n        const search = path.join(current, \"package.json\");\n        if (fs.existsSync(search)) {\n            return current;\n        }\n        /* get the parent directory */\n        const child = current;\n        current = path.dirname(current);\n        /* stop if this is the root directory */\n        if (current === child) {\n            break;\n        }\n    }\n    /* default to working directory if no package.json is found */\n    return intial;\n}\n/**\n * Try to determine root directory based on the location of the closest\n * `package.json`. Fallbacks on `process.cwd()` if no package.json was found.\n *\n * @internal\n */\n/* istanbul ignore next: cached version of determineRootDirImpl, no need to test */\nexport function determineRootDir() {\n    if (cachedRootDir === null) {\n        cachedRootDir = determineRootDirImpl(process.cwd(), fs);\n    }\n    return cachedRootDir;\n}\n//# sourceMappingURL=determine-root-dir.js.map","import path from \"node:path\";\n/**\n * @internal\n */\nexport function expandRelativePath(value, { cwd }) {\n    if (typeof value === \"string\" && value.startsWith(\".\")) {\n        return path.normalize(path.join(cwd, value));\n    }\n    else {\n        return value;\n    }\n}\n//# sourceMappingURL=expand-relative-path.js.map","import path from \"node:path\";\nimport { legacyRequire } from \"../../../resolve\";\nimport { requireUncached } from \"../../../utils\";\nimport { ConfigError } from \"../../error\";\nimport { determineRootDir } from \"./determine-root-dir\";\nimport { expandRelativePath } from \"./expand-relative-path\";\nfunction isRequireError(error) {\n    return Boolean(error && typeof error === \"object\" && \"code\" in error);\n}\nfunction isTransformer(value) {\n    return typeof value === \"function\";\n}\n/**\n * Create a new resolver for NodeJS packages using `require(..)`.\n *\n * If the module name contains `<rootDir>` (e.g. `<rootDir/foo`) it will be\n * expanded relative to the root directory either explicitly set by the\n * `rootDir` parameter or determined automatically by the closest `package.json`\n * file (starting at the current working directory).\n *\n * @public\n * @since 8.0.0\n */\nexport function nodejsResolver(options = {}) {\n    var _a;\n    const rootDir = (_a = options.rootDir) !== null && _a !== void 0 ? _a : determineRootDir();\n    function internalRequire(id, { cache }) {\n        const moduleName = id.replace(\"<rootDir>\", rootDir);\n        try {\n            /* istanbul ignore else: the tests only runs the cached versions to get\n             * unmodified access to `require`, the implementation of `requireUncached`\n             * is assumed to be tested elsewhere */\n            if (cache) {\n                return legacyRequire(moduleName);\n            }\n            else {\n                return requireUncached(legacyRequire, moduleName);\n            }\n        }\n        catch (err) {\n            if (isRequireError(err) && err.code === \"MODULE_NOT_FOUND\") {\n                return null;\n            }\n            throw err;\n        }\n    }\n    return {\n        name: \"nodejs-resolver\",\n        resolveElements(id, options) {\n            return internalRequire(id, options);\n        },\n        resolveConfig(id, options) {\n            const configData = internalRequire(id, options);\n            if (!configData) {\n                return null;\n            }\n            /* expand any relative paths */\n            const cwd = path.dirname(id);\n            const expand = (value) => expandRelativePath(value, { cwd });\n            if (configData.elements) {\n                configData.elements = configData.elements.map(expand);\n            }\n            if (configData.extends) {\n                configData.extends = configData.extends.map(expand);\n            }\n            if (configData.plugins) {\n                configData.plugins = configData.plugins.map(expand);\n            }\n            return configData;\n        },\n        resolvePlugin(id, options) {\n            return internalRequire(id, options);\n        },\n        resolveTransformer(id, options) {\n            const mod = internalRequire(id, options);\n            if (!mod) {\n                return null;\n            }\n            if (isTransformer(mod)) {\n                return mod;\n            }\n            /* this is not a proper transformer, is it a plugin exposing a transformer? */\n            if (mod.transformer) {\n                throw new ConfigError(`Module \"${id}\" is not a valid transformer. This looks like a plugin, did you forget to load the plugin first?`);\n            }\n            throw new ConfigError(`Module \"${id}\" is not a valid transformer.`);\n        },\n    };\n}\n//# sourceMappingURL=nodejs-resolver.js.map","import fs from \"node:fs\";\nimport path from \"node:path\";\nimport { Config } from \"../config\";\nimport { ConfigLoader } from \"../config-loader\";\nimport { nodejsResolver } from \"../resolver/nodejs\";\n/**\n * @internal\n */\nfunction findConfigurationFiles(fs, directory) {\n    return [\"json\", \"cjs\", \"js\"]\n        .map((extension) => path.join(directory, `.htmlvalidate.${extension}`))\n        .filter((filePath) => fs.existsSync(filePath));\n}\nconst defaultResolvers = [nodejsResolver()];\nfunction hasResolver(value) {\n    return Array.isArray(value[0]);\n}\n/**\n * Loads configuration by traversing filesystem.\n *\n * Configuration is read from three sources and in the following order:\n *\n * 1. Global configuration passed to constructor.\n * 2. Configuration files found when traversing the directory structure.\n * 3. Override passed to this function.\n *\n * The following configuration filenames are searched:\n *\n * - `.htmlvalidate.json`\n * - `.htmlvalidate.js`\n * - `.htmlvalidate.cjs`\n *\n * Global configuration is used when no configuration file is found. The\n * result is always merged with override if present.\n *\n * The `root` property set to `true` affects the configuration as following:\n *\n * 1. If set in override the override is returned as-is.\n * 2. If set in the global config the override is merged into global and\n * returned. No configuration files are searched.\n * 3. Setting `root` in configuration file only stops directory traversal.\n *\n * @public\n */\nexport class FileSystemConfigLoader extends ConfigLoader {\n    constructor(...args) {\n        var _a, _b;\n        if (hasResolver(args)) {\n            /* istanbul ignore next */\n            const [resolvers, config, options = {}] = args;\n            super(resolvers, config);\n            this.fs = /* istanbul ignore next */ (_a = options.fs) !== null && _a !== void 0 ? _a : fs;\n        }\n        else {\n            /* istanbul ignore next */\n            const [config, options = {}] = args;\n            super(defaultResolvers, config);\n            this.fs = /* istanbul ignore next */ (_b = options.fs) !== null && _b !== void 0 ? _b : fs;\n        }\n        this.cache = new Map();\n    }\n    /**\n     * Get configuration for given filename.\n     *\n     * @param filename - Filename to get configuration for.\n     * @param configOverride - Configuration to merge final result with.\n     */\n    getConfigFor(filename, configOverride) {\n        /* special case when the overridden configuration is marked as root, should\n         * not try to load any more configuration files */\n        const override = this.loadFromObject(configOverride !== null && configOverride !== void 0 ? configOverride : {});\n        if (override.isRootFound()) {\n            override.init();\n            return override.resolve();\n        }\n        /* special case when the global configuration is marked as root, should not\n         * try to load and more configuration files */\n        if (this.globalConfig.isRootFound()) {\n            const merged = this.globalConfig.merge(this.resolvers, override);\n            merged.init();\n            return merged.resolve();\n        }\n        const config = this.fromFilename(filename);\n        const merged = config\n            ? config.merge(this.resolvers, override)\n            : this.globalConfig.merge(this.resolvers, override);\n        merged.init();\n        return merged.resolve();\n    }\n    /**\n     * Flush configuration cache.\n     *\n     * @param filename - If given only the cache for that file is flushed.\n     */\n    flushCache(filename) {\n        if (filename) {\n            this.cache.delete(filename);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    /**\n     * Load raw configuration from directory traversal.\n     *\n     * This configuration is not merged with global configuration and may return\n     * `null` if no configuration files are found.\n     */\n    fromFilename(filename) {\n        if (filename === \"inline\") {\n            return null;\n        }\n        const cache = this.cache.get(filename);\n        if (cache) {\n            return cache;\n        }\n        let found = false;\n        let current = path.resolve(path.dirname(filename));\n        let config = this.empty();\n        // eslint-disable-next-line no-constant-condition -- it will break out when filesystem is traversed\n        while (true) {\n            /* search configuration files in current directory */\n            for (const configFile of findConfigurationFiles(this.fs, current)) {\n                const local = this.loadFromFile(configFile);\n                found = true;\n                config = local.merge(this.resolvers, config);\n            }\n            /* stop if a configuration with \"root\" is set to true */\n            if (config.isRootFound()) {\n                break;\n            }\n            /* get the parent directory */\n            const child = current;\n            current = path.dirname(current);\n            /* stop if this is the root directory */\n            if (current === child) {\n                break;\n            }\n        }\n        /* no config was found by loader, return null and let caller decide what to do */\n        if (!found) {\n            this.cache.set(filename, null);\n            return null;\n        }\n        this.cache.set(filename, config);\n        return config;\n    }\n    /**\n     * @internal For testing only\n     */\n    _getInternalCache() {\n        return this.cache;\n    }\n    defaultConfig() {\n        return Config.defaultConfig();\n    }\n}\n//# sourceMappingURL=file-system.js.map","import kleur from \"kleur\";\nimport { version } from \"../generated/package\";\nimport { compatibilityCheckImpl } from \"./compatibility-check\";\nconst defaults = {\n    silent: false,\n    version,\n    logger(text) {\n        /* eslint-disable-next-line no-console -- expected to log */\n        console.error(kleur.red(text));\n    },\n};\n/**\n * Tests if plugin is compatible with html-validate library. Unless the `silent`\n * option is used a warning is displayed on the console.\n *\n * @public\n * @since v5.0.0\n * @param name - Name of plugin\n * @param declared - What library versions the plugin support (e.g. declared peerDependencies)\n * @returns - `true` if version is compatible\n */\nexport function compatibilityCheck(name, declared, options) {\n    return compatibilityCheckImpl(name, declared, {\n        ...defaults,\n        ...options,\n    });\n}\n//# sourceMappingURL=compatibility-check.nodejs.js.map"],"names":["path","fs","ConfigError","ConfigLoader","Config","version","kleur","compatibilityCheckImpl"],"mappings":"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"}